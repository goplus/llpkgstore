name: Test
on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go:
          - 1.22.x
          - 1.23.x
        llcppg: [v0.2.0]
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Check out LLGo
        uses: actions/checkout@v4
        with:
          repository: 'goplus/llgo'
          path: .llgo
      - name: Check out LLCppg
        uses: actions/checkout@v4
        with:
          repository: 'goplus/llcppg'
          path: .llcppg
          ref: ${{matrix.llcppg}}
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{matrix.go}}
      - name: Set up Conan
        run: |
          sudo apt-get install -y python3 python3-pip
          python3 -m pip install conan
          conan -v
      - name: Setup LLGo
        working-directory: .llgo
        run: |
          echo "deb http://apt.llvm.org/$(lsb_release -cs)/ llvm-toolchain-$(lsb_release -cs)-18 main" | sudo tee /etc/apt/sources.list.d/llvm.list
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip llvm-18-dev libuv1-dev clang-18 libunwind-dev libclang-18-dev lld-18 cmake pkg-config libgc-dev libssl-dev zlib1g-dev libffi-dev libcjson-dev
          echo "/usr/lib/llvm-18/bin" >> $GITHUB_PATH
          cd compiler
          go install -v ./cmd/...
          export LLGO_ROOT=$GITHUB_WORKSPACE/llgo
          echo "LLGO_ROOT=$LLGO_ROOT" >> $GITHUB_ENV
      - name: Setup LLCppg
        working-directory: .llcppg
        run: |
          llgo install ./_xtool/llcppsymg
          llgo install ./_xtool/llcppsigfetch
          go install github.com/goplus/llcppg/cmd/llcppcfg@${{matrix.llcppg}}
          go install github.com/goplus/llcppg/cmd/gogensig@${{matrix.llcppg}}
          go install github.com/goplus/llcppg@${{matrix.llcppg}}
      - name: Check Conan environment
        run: conan profile detect
      - name: Download Go modules
        run: go mod download
      - name: Test Go code
        run: go test -v -race -covermode atomic -coverprofile coverage.out ./...
      - name: Upload code coverage
        uses: codecov/codecov-action@v5
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          disable_search: true
          files: coverage.out
